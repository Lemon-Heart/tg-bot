const mysql = require('mysql2/promise')
const { bot } = require('./bot')
const { Markup } = require('telegraf')
const cron = require('node-cron')

const config = {
  host: 'bodymaiu.beget.tech',
  user: process.env.DB_NAME,
  database: process.env.DB_NAME,
  password: process.env.DB_PASSWORD
}

cron.schedule('* * * * *', () => {
  console.log('–ó–∞–ø—Ä–æ—Å –∫ –ë–î')
  isInaction()
})

async function start(ctx) {
  const connection = await mysql.createConnection(config)
  const [ rows ] = await connection.execute(`SELECT * FROM users WHERE id=?`, [`${ctx.message.from?.id}`])
  if (!rows?.length) await connection.execute(`INSERT INTO users(id, name, link, status, btn, time, first_time, notified, notified_finaly) VALUES('${ctx.message.from?.id}','${ctx.message.from?.first_name}', '${ctx.message.from?.username ?? ''}', '–°—Ç–∞—Ä—Ç', 'btn_0', ${Date.now() + 1000*60*30}, ${Date.now()}, ${0}, ${0})`)
  connection.end()
}
async function update(id, status, btn, time = Date.now() + 1000*60*30, notified = 0) {
  const connection = await mysql.createConnection(config)
  await connection.query(`UPDATE users SET status=?, btn=?, time=?, notified=? WHERE id=?`, [status, btn, time, notified, id])
  connection.end()
}
async function updateNotifiedFinaly(id, notifiedFinaly) {
  const connection = await mysql.createConnection(config)
  await connection.query(`UPDATE users SET notified_finaly=${notifiedFinaly} WHERE id=${id}`)
  connection.end()
}
async function isInaction() {
  const connection = await mysql.createConnection(config)
  const [ rows ] = await connection.execute(`SELECT * FROM users`)
  if (rows.length) {
    rows.forEach((user) => {
      if (user.btn !== 'btn_end') {
        try {
          if (Date.now() >= user.time && user.notified === 0) {
            bot.telegram.sendMediaGroup(user.id, [{
              media: { source: './img/inactive.JPG' },
              caption:
                user.btn === 'btn_beforefinal' ?
                '–≠–ô, –Ω—É —Ç—ã —á–µ–≥–æ?\n–í–µ–¥—å —Ç—ã —É–∂–µ –Ω–∞ —Ñ–∏–Ω–∏—à–Ω–æ–π –ø—Ä—è–º–æ–π üèÅ\n–Ø –∂–¥—É —Ç–≤–æ—é —Ä–∞–±–æ—Ç—É, –∞ —Ç–µ–±—è –∂–¥–µ—Ç –µ—â—ë –æ–¥–∏–Ω –ø–æ–¥–∞—Ä–æ–∫ üéÅ\n\n–ù–µ —É–ø—É—Å–∫–∞–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–æ–π –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞ –∏ –Ω–∏–≥–¥–µ –Ω–µ –±—É–¥–µ—Ç!!!\n\n–í—Å—ë, —á—Ç–æ —Ç–µ–±–µ –æ—Å—Ç–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å - –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–µ–π —Ä–∞–±–æ—Ç–æ–π –≤ —ç—Ç–æ–º —á–∞—Ç–µ –∏ –Ω–∞–ø–∏—Å–∞—Ç—å ¬´–ó–ê–î–ê–ù–ò–ï –í–´–ü–û–õ–ù–ï–ù–û¬ª'
                :
                '–≠–π, –º—ã —Ç–∞–∫ –Ω–µ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞–ª–∏—Å—åüôÖüèª‚Äç‚ôÄÔ∏è\n\n–Ø –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∞ –¥–ª—è —Ç–µ–±—è —Å—Ç–æ–ª—å–∫–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ, –∞ —Ç—ã –≥–æ—Ç–æ–≤ –≤–æ—Ç —Ç–∞–∫ –ø—Ä–æ—Å—Ç–æ –≤–∑—è—Ç—å –∏ –Ω–µ –≤–∑—è—Ç—å –≤—Å–µ —Ç–æ, —á—Ç–æ —è —Ç–∞–∫ –¥–æ–ª–≥–æ —Å–æ–∑–¥–∞–≤–∞–ª–∞ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–ª–∞?????\n\n–ì–æ—Ç–æ–≤ —É–ø—É—Å—Ç–∏—Ç—å —à–∞–Ω—Å –Ω–∞—É—á–∏—Ç—å—Å—è —Ä–∏—Å–æ–≤–∞—Ç—å –∫—Ä—É—Ç—ã–µ –ø–æ—Ä—Ç—Ä–µ—Ç—ã‚ùì\n–ì–æ—Ç–æ–≤ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤‚ùì\n–ì–æ—Ç–æ–≤ –ø–æ—Ç–µ—Ä—è—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ª—é–±–∏–º–æ–º –¥–µ–ª–µ‚ùì',
              type: 'photo'
            }]).then(() => {
              setTimeout(() => {
                bot.telegram.sendMessage(
                  user.id,
                  user.btn === 'btn_beforefinal' ?
                    '–ê —Ç–∞–∫–∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–≤–æ—é —Ä–∞–±–æ—Ç—É –≤ –∞–ª—å–±–æ–º–µ –ø–æ —Å—Å—ã–ª–∫–µ –ø–æ–¥ —ç—Ç–∏–º –ø–æ—Å—Ç–æ–ºüëáüèª\n\n–Ø –ª–∏—á–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—é –∫–∞–∂–¥—É—é —Ä–∞–±–æ—Ç—É. –ò –¥–∞—é —Å–≤–æ—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—åü§ó\n–ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º–Ω–æ–π –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –í–°–ï–• –∑–∞–¥–∞–Ω–∏–π, —Ç–µ–±–µ –±—É–¥–µ—Ç –Ω–∞—á–∏—Å–ª–µ–Ω–æ –µ—â—ë 1500 –ë–† –∏ –ø—Ä–∏–¥—ë—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∫–∞–∫ —Ç—ã —Å–º–æ–∂–µ—à—å –∏–º–∏ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—èüëáüèª'
                    :
                    '‚úÖ–ò–ª–∏ –≥–æ—Ç–æ–≤ –≤—Å–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?\n–í–ø–µ—Ä–µ–¥–∏ —Ç–µ–±—è –∂–¥–µ—Ç 6 –Ω–µ–±–æ–ª—å—à–∏—Ö –≤–∏–¥–µ–æ, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —è —Å–æ–±—Ä–∞–ª–∞ —Ü–µ–ª–æ–µ –º–æ—Ä–µ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞. –¢—ã –º–æ–∂–µ—à—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å –µ–≥–æ –∏ —É–∂–µ —Å–µ–π—á–∞—Å –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ! –ê —Ç–∞–∫–∂–µ –ø–æ–¥–∞—Ä–∫–∏ –∏ –±–æ–Ω—É—Å—ã‚Ä¶\n‚ùóÔ∏è–¢–ê–ö–û–ì–û –¢–´ –ù–ï –ù–ê–ô–î–ï–®–¨ –ë–û–õ–¨–®–ï –ù–ò–ì–î–ï‚ùóÔ∏è\n\n–í—Å–µ, —á—Ç–æ —Ç–µ–±—è –æ—Ç–¥–µ–ª—è–µ—Ç –æ—Ç –∑–∞–≤–µ—Ç–Ω–æ–π –º–µ—á—Ç—ã - —ç—Ç–æ –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ. –ù–∞–ø–æ–º–∏–Ω–∞—é, —á—Ç–æ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ, —á–µ–º 24 —á–∞—Å–∞.\n\n–°–∫–æ—Ä–µ–µ –∂–º–∏üëáüèª',
                  Markup.inlineKeyboard([
                    user.btn === 'btn_beforefinal' ?
                    [Markup.button.callback('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–∞–±–æ—Ç–æ–π', 'https://vk.com/album-170738408_256211336')]
                    :
                    [Markup.button.callback('–ò–∑–≤–∏–Ω–∏, —è –æ—Ç–≤–ª–µ–∫—Å—è. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—åü§ó', user.btn)]
                ]))
              }, 1)
              update(user.id, user.status, user.btn, user.time, 1)
            })
          }
          if (Date.now() - user.first_time >= 1000*60*60*18 && user.notified_finaly === 0) {
            bot.telegram.sendMediaGroup(user.id, [{
              media: { source: './img/inactive2.JPG' },
              caption: '‚ö†Ô∏è‚è≥–°–æ–≤—Å–µ–º —Å–∫–æ—Ä–æ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø –∫ —É—Ä–æ–∫—É –ø–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—é –ø–æ—Ä—Ç—Ä–µ—Ç–∞, –∞ —Ç–∞–∫–∂–µ –∫–æ –≤—Å–µ–º –ø–æ–¥–∞—Ä–∫–∞–º! –¢–∞–∫ –∫–∞–∫ –∑–∞–¥–∞–Ω–∏—è –≤—Å—ë –µ—â–µ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.\n\n–£ —Ç–µ–±—è –µ—Å—Ç—å –µ—â—ë 5 —á–∞—Å–æ–≤. –ò–Ω–∞—á–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∑–∞–∫—Ä–æ–µ—Ç—Å—è –ù–ê–í–°–ï–ì–î–ê –∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∑–∞ 10.000‚ÇΩ',
              type: 'photo'
            }]).then(() => {
              setTimeout(() => {
                bot.telegram.sendMessage(
                  user.id,
                  '–ü—Ä—è–º–æ —Å–µ–π—á–∞—Å –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –≤—ã–ø–æ–ª–Ω–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–π –±–æ–Ω—É—Å–Ω—ã–µ —Ä—É–±–ª–∏üëáüèªüëáüèªüëáüèª\n\nP.S. –ï—Å–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –≤–æ–≤—Ä–µ–º—è - –ø—Ä–æ—Å—Ç–æ –¥–æ–∂–¥–∏—Å—å –ø—Ä–æ–≤–µ—Ä–∫–∏.',
                  Markup.inlineKeyboard([
                    [Markup.button.callback('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è', user.btn)]
                ]))
              }, 1)
            })
            updateNotifiedFinaly(user.id, 1)
          }
        } catch (e) { console.log(e) }
      }
    })
  }
  connection.end()
}
lastMessageId = []
async function mailAllUsers(postText, postPhoto = null) {
  const connection = await mysql.createConnection(config)
  const [ rows ] = await connection.execute(`SELECT * FROM users`)
  if (rows.length) {
    rows.forEach((user) => {
      try {
        if (postPhoto) {
          bot.telegram.sendMediaGroup(user.id, [{
            media: postPhoto,
            caption: postText,
            type: 'photo'
          }])
            .then(data => {
              lastMessageId.push([data[0].chat.id, data[0].message_id])
            })
        } else {
          bot.telegram.sendMessage(user.id, postText)
            .then(data => {
              lastMessageId.push([data.chat.id, data.message_id])
            })
        }
      } catch (e) { console.log(e) }
    })
  }
  connection.end()
}
async function deleteLastMessage() {
  lastMessageId.map(o => bot.telegram.deleteMessage(o[0], o[1]))
}
async function remove(names) {
  const connection = await mysql.createConnection(config)
  await connection.query('DELETE FROM users WHERE name IN ("–¢–∞—Ç—å—è–Ω–∞", "–ù–∞—Å—Ç—è", "–í–∞–ª–µ—Ä–∏—è", "–ê–Ω–∞—Å—Ç–∞—Å–∏—è", "–ê–Ω–¥—Ä–µ–π")')
  connection.end()
}

module.exports.start = start
module.exports.isInaction = isInaction
module.exports.update = update
module.exports.remove = remove
module.exports.mailAllUsers = mailAllUsers
module.exports.deleteLastMessage = deleteLastMessage